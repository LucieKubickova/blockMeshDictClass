/*--------------------------------*- C++ -*----------------------------------*\ 
| =========                 |                                                 | 
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \    /   O peration     | Version:  4.1                                   | 
|   \  /    A nd           | Web:      www.OpenFOAM.org                      | 
|    \/     M anipulation  |                                                 | 
\*---------------------------------------------------------------------------*/ 
FoamFile 
{ 
 	 version 	 2.0; 
 	 format 	 ascii; 
 	 class 		 dictionary; 
 	 object 	 blockMeshDict; 
} 
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

convertToMeters 	1.0; 

vertices 
( 
	 ( 0.0 0.0 0.0 )	// 000
	 ( 0.025 0.0 0.0 )	// 001
	 ( 0.025 0.01 -8.726424746054183e-05 )	// 002
	 ( 0.0 0.01 -8.726424746054183e-05 )	// 003
	 ( 0.025 0.01 8.726424746054183e-05 )	// 004
	 ( 0.0 0.01 8.726424746054183e-05 )	// 005
	 ( 0.125 0.0 0.0 )	// 006
	 ( 0.125 0.01 -8.726424746054183e-05 )	// 007
	 ( 0.125 0.01 8.726424746054183e-05 )	// 008
	 ( 0.125 0.01044842266 -9.117737405745727e-05 )	// 009
	 ( 0.025 0.01044842266 -9.117737405745727e-05 )	// 010
	 ( 0.125 0.01044842266 9.117737405745727e-05 )	// 011
	 ( 0.025 0.01044842266 9.117737405745727e-05 )	// 012
	 ( 0.15 0.0 0.0 )	// 013
	 ( 0.15 0.01 -8.726424746054183e-05 )	// 014
	 ( 0.15 0.01 8.726424746054183e-05 )	// 015
); 

edges 
( 
); 

blocks 
( 
	hex
		( 0  1  2  3  0  1  4  5)	( 50  20  1)	simpleGrading 	( 1.0  1.0  1.0)

	hex
		( 1  6  7  2  1  6  8  4)	( 200  20  1)	simpleGrading 	( 1.0  1.0  1.0)

	hex
		( 2  7  9  10  4  8  11  12)	( 200  1  1)	simpleGrading 	( 1.0  1.0  1.0)

	hex
		( 6  13  14  7  6  13  15  8)	( 50  20  1)	simpleGrading 	( 1.0  1.0  1.0)

); 

boundary 
( 
	wedgeZ0
	{
		type wedge;
		faces
		(
			( 0  1  2  3)
			( 1  6  7  2)
			( 2  7  9  10)
			( 6  13  14  7)
		);
	}

	wedgeZE
	{
		type wedge;
		faces
		(
			( 0  1  4  5)
			( 1  6  8  4)
			( 4  8  11  12)
			( 6  13  15  8)
		);
	}

	inlet
	{
		type patch;
		faces
		(
			( 0  3  5  0)
		);
	}

	outlet
	{
		type patch;
		faces
		(
			( 13  14  15  13)
		);
	}

	walls
	{
		type wall;
		faces
		(
			( 0  1  1  0)
			( 3  2  4  5)
			( 1  6  6  1)
			( 2  10  12  4)
			( 10  9  11  12)
			( 7  9  11  8)
			( 6  13  13  6)
			( 7  14  15  8)
		);
	}

); 

mergePatchPairs 
( 
); 

